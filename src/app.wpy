<style lang="scss">
  @import './styles/reset';
  @import './styles/global';
</style>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'
  import {
    setStore
  } from 'wepy-redux'
  import configStore from './store'
  const store = configStore()
  setStore(store)
  export default class extends wepy.app {
    config = {
      pages: [
        'pages/index',
        'pages/bookList',
        'pages/myLike'
      ],
      window: {
        backgroundTextStyle: 'light',
        navigationBarBackgroundColor: '#fff',
        navigationBarTitleText: '轻阅',
        navigationBarTextStyle: 'black'
      },
      tabBar: {
        color: '#c7c7c7',
        selectedColor: '#000',
        list: [{
          pagePath: 'pages/index',
          text: '流行',
          iconPath: './images/icon/classic.png',
          selectedIconPath: './images/icon/classic@highlight.png'
        },
        {
          pagePath: 'pages/bookList',
          text: '书单',
          iconPath: './images/icon/book.png',
          selectedIconPath: './images/icon/book@highlight.png'
        },
        {
          pagePath: 'pages/myLike',
          text: '喜欢',
          iconPath: './images/icon/my.png',
          selectedIconPath: './images/icon/my@highlight.png'
        }
        ]
      }
    }
    globalData = {
      userInfo: null
    }
    constructor() {
      super()
      this.use('requestfix')
      this.use('promisify')
      // 拦截request请求
      this.intercept('request', {
        // 发出请求时的回调函数
        config(p) {
          // 对所有request请求中的OBJECT参数对象统一附加时间戳属性
          p.header = {}
          p.header['appkey'] = 'RdshydjBvcYZhMZC'
          // 必须返回OBJECT参数对象，否则无法发送请求到服务端
          return p
        },
        // 请求成功后的回调函数
        success(p) {
          // 可以在这里对收到的响应数据对象进行加工处理
          // 必须返回响应数据对象，否则后续无法对响应数据进行处理
          return p
        },
        // 请求失败后的回调函数
        fail(p) {
          // 必须返回响应数据对象，否则后续无法对响应数据进行处理
          return p
        },
        // 请求完成时的回调函数(请求成功或失败都会被执行)
        complete(p) {}
      })
    }
    getUserInfo(cb) {
      const that = this
      if (this.globalData.userInfo) {
        return this.globalData.userInfo
      }
      wepy.getUserInfo({
        success(res) {
          that.globalData.userInfo = res.userInfo
          cb && cb(res.userInfo)
        }
      })
    }
  }
</script>
